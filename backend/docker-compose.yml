version: "3.8"

services:
  database:
    image: postgres:16
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    volumes:
      - minabtest:/var/lib/postgresql/data
    networks:
      - minabnetwork
    restart: always
    container_name: database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  hasura:
    image: hasura/graphql-engine:v2.23.0
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://user:password@database:5432/mydatabase
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      HASURA_GRAPHQL_ADMIN_SECRET: "${ADMIN_SECRET_KEY}" 
      HASURA_GRAPHQL_CORS_ORIGIN: "http://localhost:3000"
      # HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "${JWT_SECRET_KEY}" }'  # Use env variable
    ports:
      - "8080:8080"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - minabnetwork
    restart: always
    container_name: hasura
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/healthz || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  my-go:
    build:
      context: ./go
      dockerfile: Dockerfile
    environment:
      HASURA_GRAPHQL_URL: http://hasura:8080/v1/graphql
      # ADMIN_URL: "${ADMIN_URL}"  # Add ADMIN_URL if needed
    volumes:
      - ./go/.env:/app/.env  # Correct path to .env
    ports:
      - "7070:7070"
    depends_on:
      database:
        condition: service_healthy
      hasura:
        condition: service_healthy
    networks:
      - minabnetwork
    restart: always
    container_name: my-go  # Change container name to my-go

volumes:
  minabtest:

networks:
  minabnetwork:
    driver: bridge
